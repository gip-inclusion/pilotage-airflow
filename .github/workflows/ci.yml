name: üîÆ CI

on:
  push

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: {}
    env:
      CI: 1
      PYTHONPATH: .
      PGPASSWORD: password
      PGHOST: localhost
      PGUSER: postgres
      PGPORT: 5432
      VIRTUAL_ENV: .venv
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
      cancel-in-progress: true
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: üêò Non-durable PostgreSQL
      run: |
        psql <<SQL
          ALTER SYSTEM SET fsync=off;
          ALTER SYSTEM SET synchronous_commit=off;
          ALTER SYSTEM SET full_page_writes=off;
          CREATE DATABASE pilotage;
          CREATE DATABASE airflow;
        SQL
        docker kill --signal=SIGHUP ${{ job.services.postgres.id }}
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: ‚è¨ Install uv
      uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
      with:
        enable-cache: true
        cache-dependency-glob: "requirements/dev.txt"
    - name: üì• Install Python dependencies
      run: |
        make venv
        echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
    - name: ‚öô Setup airflow database
      run: |
        airflow db reset --yes
        airflow db migrate
      env:
        AIRFLOW__CORE__FERNET_KEY: U7sOUkZeQ6JGmwQoG6anMTdnl_nzy4f74IFkNmMeW50=
        AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql://postgres:password@localhost:5432/airflow
    - name: Install dbt packages
      run: dbt deps
    - name: ‚ú® Verify quality üëå
      run: make quality
      env:
        PGDATABASE: pilotage
    - name: üß™ Run airflow tests
      run: make test
      env:
        PGDATABASE: pilotage
        AIRFLOW__CORE__FERNET_KEY: U7sOUkZeQ6JGmwQoG6anMTdnl_nzy4f74IFkNmMeW50=
        AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql://postgres:password@localhost:5432/airflow
    - name: üìì Generate dbt documentation
      run: dbt docs generate
      env:
        PGDATABASE: pilotage
