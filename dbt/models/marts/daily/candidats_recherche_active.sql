select
    cc.id,
    cc.tranche_age,
    cc.genre_candidat,
    cc.type_inscription,
    cc.diagnostic_valide,
    cc.type_auteur_diagnostic,
    cc.sous_type_auteur_diagnostic,
    cc.total_diagnostics,
    cc.date_diagnostic,
    cc."date_dernière_connexion",
    cc."région",
    cc."nom_département",
    cc."département",
    coalesce(sum(case when cc.type_prescripteur = 'SPE' then 1 else 0 end) > 0)                              as candidatures_spe,
    coalesce(sum(case when cc.type_structure in ('ACI', 'AI', 'EI', 'EITI', 'ETTI') then 1 else 0 end) > 0)  as candidat_iae,
    min(cc.date_premiere_candidature)                                                                        as date_premiere_candidature,
    max(cc.date_candidature)                                                                                 as date_derniere_candidature,
    max(case when cc."état" = 'Candidature acceptée' then cc.date_candidature end)                           as date_derniere_candidature_acceptee,
    max(cc.date_embauche)                                                                                    as date_derniere_embauche,
    current_date - min(cc.date_premiere_candidature)                                                         as delai_premiere_candidature,
    current_date - max(cc.date_candidature)                                                                  as delai_derniere_candidature,
    {{ interval_30_days('current_date - max(cc.date_candidature)', 0) }}                                      as delai_derniere_candidature_interval,
    cast({{ interval_30_days('current_date - max(cc.date_candidature)', 1) }} as integer)                                                                                                 as delai_derniere_candidature_interval_order,
    current_date - max(case when cc."état" = 'Candidature acceptée' then cc.date_candidature end)            as delai_derniere_candidature_acceptee,
    count(cc.id)                                                                                             as nb_candidatures,
    sum(case when cc."état" = 'Candidature acceptée' then 1 else 0 end)                                      as nb_candidatures_acceptees,
    sum(case when cc."état" != 'Candidature acceptée' then 1 else 0 end)                                     as nb_candidatures_sans_accept,
    coalesce(sum(case when cc."état" = 'Candidature acceptée' then 1 else 0 end) > 0)                        as a_eu_acceptation,
    coalesce(max(cc.date_embauche) >= current_date - interval '6 months', max(cc.date_embauche) is not null) as a_eu_embauche
from {{ ref('stg_candidats_candidatures') }} as cc
where cc.date_candidature >= current_date - interval '6 months'
group by
    cc.id,
    cc.tranche_age,
    cc.genre_candidat,
    cc.total_diagnostics,
    cc.date_diagnostic,
    cc."date_dernière_connexion",
    cc.type_inscription,
    cc."région",
    cc."nom_département",
    cc."département",
    cc.diagnostic_valide,
    cc.type_auteur_diagnostic,
    cc.sous_type_auteur_diagnostic
